@using LibraryManagmentSystem.Data.Model
@using LibraryManagmentSystem.Authorization
@using Microsoft.AspNetCore.Authorization

@inject IAuthorizationService AuthorizationService
@model Member

<div class="container">
    <div class="card">
        <form asp-controller="Member" asp-action="Update" method="post" class="form-horizontal" role="form">
            <h3 class="card-header">Edit Member: @Model.MemberName</h3>
            @Html.HiddenFor(m => Model.MemberID)
            <div class="card-body ml-6">
                <label class="col-md-4 control-label">Student ID</label>
                <div class="col-md-6">
                    <input asp-for="StudentID" class="form-control" />
                    <span asp-validation-for="StudentID" class="text-danger"></span>
                </div>
                <label class="col-md-4 control-label">Name</label>
                <div class="col-md-6">
                    <input asp-for="MemberName" class="form-control" />
                    <span asp-validation-for="MemberName" class="text-danger"></span>
                </div>
                <label class="col-md-4 control-label">Email</label>
                <div class="col-md-6">
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <label class="col-md-4 control-label">Address</label>
                <div class="col-md-6">
                    <input asp-for="Address" class="form-control" />
                    <span asp-validation-for="Address" class="text-danger"></span>
                </div>
                <label class="col-md-4 control-label">Account Status</label>
                <div class="col-md-6">
                    @if (Model.Status != AccountStatus.Active)
                    {
                        <span class="badge bg-danger">@Html.DisplayFor(model => model.Status)</span>
                    }
                    @if (Model.Status != AccountStatus.Blocked)
                    {
                        <span class="badge bg-success">@Html.DisplayFor(model => model.Status)</span>
                    }
                </div>
                <br />
                <div class="col-md-6">
                @{
                    var isAuthorised = await AuthorizationService.AuthorizeAsync(User, Model, LibraryOperations.Block);
                    if (isAuthorised.Succeeded)
                    {
                        @if (Model.Status != AccountStatus.Active)
                        {
                            <form style="display:inline" method="post">
                                <input hidden name="id" value="@Model.MemberID">
                                <input hidden name="status" value="@AccountStatus.Active">
                                <button type="submit" class="btn btn-success">Activate and Update</button>
                            </form>
                        }

                        @if (Model.Status != AccountStatus.Blocked)
                        {
                            <form style="display:inline" method="post">
                                <input hidden name="id" value="@Model.MemberID">
                                <input hidden name="status" value="@AccountStatus.Blocked">
                                        <button type="submit" class="btn btn-danger">Block and Update</button>
                            </form>
                        }
                    }
                }
                </div>
            </div>
            <br />
            <div class="card-footer">
                <div class="btn-group col-md-offset-2 col-md-4">
                    <button class="btn btn-outline-danger btn-rounded mb-2" type="submit" value="Cancel" asp-controller="Member" asp-action="Index">Cancel</button>
                    <button class="btn btn-outline-success btn-rounded mb-2" type="submit" value="Update">Update</button>
                </div>
            </div>
        </form>
    </div>
</div>